import React from 'react';
import ReactDOM from 'react-dom';
import uniqid from 'uniqid';
import Ears from './pieces/Ears';
import Head from './pieces/Head';
import Muzzle from './pieces/Muzzle';
import Eyes from './pieces/Eyes';
import SVGDefs from './SVGDefs';

const CatSVG = ({headSize, eyeShape, earSet, muzzleLength}) => {
    const id = uniqid(); // TODO move to constructor. Cats shouldn't re-render often enough to cause a performance issue, so this is very low priority

    return (
        <svg xmlns='http://www.w3.org/2000/svg' xmlnsXlink='http://www.w3.org/1999/xlink' width={389} height={306} viewBox='0 0 389 306'>
            <SVGDefs id={id} headSize={headSize} eyeShape={eyeShape} />
            <g filter={`url(#head-shadow-${id})`}>
                <Ears earSet={earSet} />
                <Head headSize={headSize} />
            </g>
            {/* <path d='M195.2 106.6c3.6 0 11 1.5 18.9 9 13 12.4 15 32.4 20.3 37.7 8 8.2 36 11.2 36.3 31.4 0 9.2-14.7 35.2-33.1 45.5-20.2 11.3-31.2 15.3-42.4 15.3s-22.2-4-42.4-15.3c-18.3-10.2-33.1-36.2-33.1-45.5.2-20.3 28.2-23.2 36.3-31.4 5.3-5.3 7.3-25.3 20.3-37.7 7.8-7.4 15.4-9 18.9-9z' className='point' id='point' />
            <path d='M188.27 128.5c-1.2-5.7-2.7-14.2-2.7-14.2s-4.3 8.2-4.3 12.3c0 6.5 1.3 17 1.3 17s-2.8-4.7-5.5-9.5c-1.4-2.5-1.8-8.3-3-13.7-1.1-4.9-3.1-9.7-3.1-9.7s-9.8 8-13 24.5c-1.3 6.6-.9 15.8-.9 15.8s-4.4-2.5-5.1-15.5c-.3-5.3 3.4-20 2.2-25.8-1.3-5.8-10.8-17-10.8-17l51.8-19.7 51.9 19.8s-9.6 11.2-10.8 17c-1.3 5.8 2.5 20.5 2.2 25.8-.7 13-5.1 15.5-5.1 15.5s.3-9.3-.9-15.8c-3.2-16.5-13-24.5-13-24.5s-2 4.7-3.1 9.7c-1.2 5.4-1.6 11.1-3 13.7-2.7 4.8-6.5 9.5-6.5 9.5s2.3-10.5 2.3-17c0-4.2-4.3-12.3-4.3-12.3s-1.5 8.5-2.7 14.2c-2.3 11.2-6.9 18-6.9 18s-4.7-6.9-7-18.1zm149.4 68.8s-36.7-9.8-47.2-16.7c-4-2.6-7.5-11.3-11.7-13.3-4.3-2.1-13.3-3.7-19.5-2.3-5.6 1.2-21.9 11-21.9 11s13.8-1.4 20.8-2c3.5-.3 15.4-.2 18.2 2 3.3 2.6 6.2 11.2 9.3 14 4.7 4.1 22.3 10.7 22.3 10.7s-9.9-1.1-13.1-1.9c-4.4-1.1-12.7-4.8-17.2-5.3-8.6-.9-28.3 3.7-28.3 3.7s25.2.6 30 2.2c10.6 3.4 31.6 11.1 41.3 16.7 5.6 3.2 20.4 16 20.4 16zm-288.3 34.6s14.8-12.8 20.4-16c9.7-5.6 30.7-13.3 41.3-16.7 4.8-1.5 30-2.2 30-2.2s-19.7-4.5-28.3-3.7c-4.6.5-12.8 4.2-17.2 5.3-3.2.8-13.1 1.9-13.1 1.9s17.6-6.6 22.3-10.7c3.2-2.8 6-11.4 9.3-14 2.8-2.2 14.7-2.3 18.2-2 7.1.7 20.8 2 20.8 2s-16.4-9.7-21.9-11c-6.2-1.4-15.2.3-19.5 2.3-4.3 2.1-7.8 10.7-11.7 13.3-10.4 6.9-47.2 16.7-47.2 16.7z' className='tabby' />
            <path fill='#b47a00' d='M140.3 128.5c1-6.5 7.8-12.3 8.2-19 0-2.1-2.2-4.2-1.5-6.2 2.4-7.2 11-10.8 17.6-14.6 6.2-3.6 20.3-7.5 20.3-7.5l19.3 4c-3 11-9.9 11.5-14 15.7-1.3 1.3-.7 3.9-2 5.2-4.5 4.6-11.6 8.6-17.8 7.3-4.2-.9-7.3-4.2-11.2-1.4-4.6 3.3-1.7 6.7-1.7 10.3 0 4-3 13-5.5 16-3.3 4-12.9-2.2-11.7-9.8zm20.5 53.9c3.3 1.2 1.6 9 5.2 9.2 8.7.3 13-13.2 14.4-21.8.5-3.1-2.4-6-2.5-9.1-.2-4.4 5.4-10 2.2-12.9-3.2-2.8-8.6 1.5-12.3 3.5-3 1.5-6.1 3.3-7.6 6.2-1.5 3 1.6 7.5-.6 9.9-5.3 5.7-19.9-3.8-23 3.3-2.7 6 4.7 14.3 11 16.4 4.4 1.5 8.8-6.3 13.2-4.7zm72.6 12c6.5 5.2 11.5 1 17.5 6.9 2.7 2.8 4.3 16.8 10.5 14.8 11.5-3.7 11.1-7.1 16-11.1 3.7-3-3.5-17.2-5-20-4-8.2 0-15.3 9.4-15.2 7.6 0 9.7-8 14.5-4.6 2.9 2.1-1.1 8.8 2 10.6 6.5 3.9 15.4-2 15.6-8.8 0-1.7-2.7-2.7-2.5-4.4.6-6 6.6-8.2 11.9-10.1l-51.4-54.3-56-14c4.5 4.8 16.3 21 15.5 26.1-.9 4.9-8.8 6.3-10 11.1-.7 3.6 1.3 7.4 3.2 10.6 2.3 4 13 7.6 9.5 10.7-4 3.6-14.3-.6-20.1 3.3-3.9 2.6-9.3 3.1-7.8 11.6 1.5 8.5-10.7 27.4 2 30.2 12.7 2.7 17.7.7 25.2 6.6zm-46.8 20c-7 1.8-14.6 9-14 16.2 1.2 14.4 27.5 17 38 26.9 4.5 5 6 11.8 12.2 12.2 7.3.3 15.7-2.7 20.3-8.4 3.4-4.2 6.4-12 2.8-16-2.7-3-10.4 4.5-11.8.8-2.3-5.9 16.4-5.5 14.8-11.6-2.5-9.5-18.1-5.8-24-7.6-6.4-2-10-11-16.7-11.3-2.8-.2-4.6 3.7-7.4 3.9-5 .4-9.4-6.4-14.2-5.1zm-76.3-46.3c-2 2.7-1.5 6.8-3.7 9.3-7.4 8.1-26.9 4.5-29.2 15.2-1.8 7.9 14.1 11.2 14.7 19.2.2 3.6-6 5.8-5.3 9.3.6 3.7 5.8 4.7 8.7 7.2 11.6 10.2 18.8 28 33.9 31.8 7.2 1.8 20 1.5 21.5-5.8.7-3.7-7-3.6-9-6.8-2.8-4.7-.2-11.6-3-16.4-4.2-7.4-19.6-8.1-19.5-16.7 0-6.5 12.7-6.4 14.8-12.5 3.7-10.9-3.2-22.9-7.1-33.7-1.3-3.6-1.6-9.4-5.3-10.1-5-1-8.6 5.9-11.5 10z' className='tortie' />
            <path d='M188.27 128.5c-1.2-5.7-2.7-14.2-2.7-14.2s-4.3 8.2-4.3 12.3c0 6.5 1.3 17 1.3 17s-2.8-4.7-5.5-9.5c-1.4-2.5-1.8-8.3-3-13.7-1.1-4.9-3.1-9.7-3.1-9.7s-9.8 8-13 24.5c-1.3 6.6-.9 15.8-.9 15.8s-4.4-2.5-5.1-15.5c-.3-5.3 3.4-20 2.2-25.8-1.3-5.8-10.8-17-10.8-17l51.8-19.7 51.9 19.8s-9.6 11.2-10.8 17c-1.3 5.8 2.5 20.5 2.2 25.8-.7 13-5.1 15.5-5.1 15.5s.3-9.3-.9-15.8c-3.2-16.5-13-24.5-13-24.5s-2 4.7-3.1 9.7c-1.2 5.4-1.6 11.1-3 13.7-2.7 4.8-6.5 9.5-6.5 9.5s2.3-10.5 2.3-17c0-4.2-4.3-12.3-4.3-12.3s-1.5 8.5-2.7 14.2c-2.3 11.2-6.9 18-6.9 18s-4.7-6.9-7-18.1zm149.4 68.8s-36.7-9.8-47.2-16.7c-4-2.6-7.5-11.3-11.7-13.3-4.3-2.1-13.3-3.7-19.5-2.3-5.6 1.2-21.9 11-21.9 11s13.8-1.4 20.8-2c3.5-.3 15.4-.2 18.2 2 3.3 2.6 6.2 11.2 9.3 14 4.7 4.1 22.3 10.7 22.3 10.7s-9.9-1.1-13.1-1.9c-4.4-1.1-12.7-4.8-17.2-5.3-8.6-.9-28.3 3.7-28.3 3.7s25.2.6 30 2.2c10.6 3.4 31.6 11.1 41.3 16.7 5.6 3.2 20.4 16 20.4 16zm-288.3 34.6s14.8-12.8 20.4-16c9.7-5.6 30.7-13.3 41.3-16.7 4.8-1.5 30-2.2 30-2.2s-19.7-4.5-28.3-3.7c-4.6.5-12.8 4.2-17.2 5.3-3.2.8-13.1 1.9-13.1 1.9s17.6-6.6 22.3-10.7c3.2-2.8 6-11.4 9.3-14 2.8-2.2 14.7-2.3 18.2-2 7.1.7 20.8 2 20.8 2s-16.4-9.7-21.9-11c-6.2-1.4-15.2.3-19.5 2.3-4.3 2.1-7.8 10.7-11.7 13.3-10.4 6.9-47.2 16.7-47.2 16.7z' className='torbie' />
            <path fill='#f7f4e9' d='M61.07 260.1s56.5-20.2 75-30.3c8.7-4.7 21.9-5.8 26.1-14.7.8-1.7 6.4-10.9 6.9-12.7 2.9-8.4 15.1-20 18-28.4.4-1.2-.3-4 0-5.3.6-2.4 4.2-6.3 5-8.7 2-5.5 3.8-23 3.8-23s4 11.9 4.2 16c.2 2.9-2.6 8.9-1.5 11.7 1.1 2.8 7.2 5.4 9 7.8 5.2 6.5 15.7 31.4 20.8 37.9 5.9 7.4 16 6.9 24.4 11.3 17.4 9.2 75.5 39.7 75.5 39.7L194.67 306z' className='lowwhite' />
            <path fill='#f7f4e9' d='M190.27 131c-2.8 5.5-13 14.3-15.6 20.5-4.7 11.2-6.7 24.5-19.3 30.7-3.8 1.8-20.8-3-29.4-1.5-22.3 3.9-71.1-7.1-71.1-7.1l-14.6 97.7 154.4 34.7 136.2-36.7 5-93.7s-51.2 2.4-67.3 8c-4 1.4-17.5-.6-21.5.7-3.2 1.1-13.5-5.8-15.2-8.7-3-5.1-8.2-9.2-8.3-10.7-.3-2.9-3-10.8-4.2-13.5-3.5-8.1-17.3-16.3-14-28 1.7-6.3-9.2-22.9-9.2-22.9s-1.3 21.3-5.9 30.5z' className='highwhite' /> */}
            <Eyes id={id} eyeShape={eyeShape} />
            <Muzzle id={id} muzzleLength={muzzleLength} />
        </svg>
    );
};

export function renderCat(container) {
    const phenotype = {
        headSize: 2,
        eyeShape: 2,
        earSet: 2,
        muzzleLength: 2
    };
    ReactDOM.render(<CatSVG {...phenotype} />, container);
}

export default CatSVG;